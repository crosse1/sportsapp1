<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profile</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/custom.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
    <style>
        .profile-header {
            background: linear-gradient(to right, #7e22ce, #14b8a6);
        }
        .trophy-panel {
            background-color: rgba(255,255,255,0.15);
        }
        .follow-btn {
            transition: background-color 0.3s, color 0.3s;
        }

.avatar {
    border-radius: 50%; /* Circle shape */
    object-fit: cover;
    border: 2px solid rgba(255, 255, 255, 0.8);
    display: inline-block; /* Align nicely with text */
}

/* center profile image on mobile */
.profile-avatar {
    display: block;
    margin-left: auto;
    margin-right: auto;
}

@media (min-width: 768px) {
    .profile-avatar {
        margin-left: 0;
        margin-right: 0;
    }
}

/* Large avatar: scales with screen width */
.avatar-lg {
    width: clamp(80px, 20vw, 300px); /* Min 80px, Max 150px, scales up to 20% of viewport width */
    height: clamp(80px, 20vw, 300px);
}

/* Small avatar: scales with screen width */
.avatar-sm {
    width: clamp(40px, 10vw, 60px); /* Min 40px, Max 60px, scales up to 10% of viewport width */
    height: clamp(40px, 10vw, 60px);
}
    </style>
</head>
<body class="d-flex flex-column min-vh-100">
    <%- include('partials/header') %>

    <div class="profile-header py-5 text-white">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-md-3 text-center mb-4 mb-md-0">
                    <div class="profile-avatar-wrapper d-inline-block">
                        <img src="<%= user.profileImage || 'https://via.placeholder.com/150' %>"
     class="avatar avatar-lg profile-avatar"
     alt="Profile Photo">
                        
                        <% if (user.favoriteTeams && user.favoriteTeams.length > 0) { %>
                            <% user.favoriteTeams.forEach(function(t){ %>
                                <a href="/teams/<%= t._id %>" class="chain-logo">
                                    <img src="<%= t.logos && t.logos[0] ? t.logos[0] : '' %>" alt="<%= t.school %>">
                                </a>
                            <% }) %>
                        <% } %>
                    </div>
                </div>
                <div class="col-md-6 text-center text-md-start">
                    <h2 class="fw-bold mb-1"><%= user.username %></h2>
                    
                    <div class="d-flex justify-content-center justify-content-md-start">
                        <div class="me-4">
                            <a href="/users/<%= user._id %>/followers" class="text-decoration-none text-white">
                                <div id="followersCount" class="fw-bold text-primary"><%= user.followersCount %></div>
                                <small class="text-white-50">Followers</small>
                            </a>
                        </div>
                        <div>
                            <a href="/users/<%= user._id %>/following" class="text-decoration-none text-white">
                                <div class="fw-bold text-info"><%= user.followingCount %></div>
                                <small class="text-white-50">Following</small>
                            </a>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 text-center text-md-end">
                    <% if (isCurrentUser) { %>
                        <a href="/profile/edit" class="btn btn-primary rounded-pill px-4">Edit Profile</a>
                    <% } else if (viewer) { %>
                        <button id="followBtn" data-user="<%= user._id %>" class="btn btn-<%= isFollowing ? 'secondary' : 'primary' %> rounded-pill px-4 follow-btn"><%= isFollowing ? 'Following' : 'Follow' %></button>
                    <% } %>
                </div>
            </div>
            <% if (isCurrentUser) { %>
            <div class="row mt-3">
                <div class="col-md-6 offset-md-3">
                    <div class="position-relative">
                        <i class="bi bi-search search-icon"></i>
                        <input type="text" id="searchInput" class="form-control profile-search mb-3" placeholder="Find users">
                    </div>
                    <div id="searchResults" class="row g-3" style="max-height:300px;overflow:auto;"></div>
                </div>
            </div>
            <% } %>
            
    </div>
</div>

    <div class="container my-4">
        <h4>Favorite Teams</h4>
        <% if (user.favoriteTeams && user.favoriteTeams.length > 0) { %>
            <div class="d-flex flex-wrap gap-2">
                <% user.favoriteTeams.forEach(function(t){ %>
                    <img src="<%= t.logos && t.logos[0] ? t.logos[0] : '' %>"
     alt="<%= t.school %>"
     class="avatar avatar-sm"
     style="width:60px;height:60px;">
                <% }) %>
            </div>
        <% } else { %>
            <p>No favorite teams selected.</p>
        <% } %>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        const searchInput = document.getElementById('searchInput');
        const resultsEl = document.getElementById('searchResults');
        const followBtn = document.getElementById('followBtn');

        if(followBtn){
            followBtn.addEventListener('click', async function(){
                const targetId = this.dataset.user;
                const isFollowing = this.classList.contains('btn-secondary');
                const action = isFollowing ? 'unfollow' : 'follow';
                this.disabled = true;
                try {
                    const res = await fetch(`/users/${targetId}/${action}`, { method: 'POST' });
                    if(!res.ok) throw new Error();
                    const countEl = document.querySelector('#followersCount');
                    if(isFollowing){
                        this.classList.remove('btn-secondary');
                        this.classList.add('btn-primary');
                        this.textContent = 'Follow';
                        if(countEl) countEl.textContent = parseInt(countEl.textContent) - 1;
                    } else {
                        this.classList.remove('btn-primary');
                        this.classList.add('btn-secondary');
                        this.textContent = 'Following';
                        if(countEl) countEl.textContent = parseInt(countEl.textContent) + 1;
                    }
                } catch (err) {
                    alert('Action failed');
                } finally {
                    this.disabled = false;
                }
            });
        }

        if(searchInput){
            searchInput.addEventListener('input', async function(){
                const q = this.value.trim();
                if(!q){ resultsEl.innerHTML=''; return; }
                const res = await fetch('/users/search?q='+encodeURIComponent(q));
                if(!res.ok) return;
                const data = await res.json();
                const currentId = '<%= viewer ? viewer.id : "" %>';
                resultsEl.innerHTML = data.map(u=>{
                    const following = u.followers && u.followers.includes(currentId);
                    return `<div class="col-md-4"><div class="card p-2 d-flex flex-row align-items-center gap-2">`+
                        `<img src="${u.profileImage || 'https://via.placeholder.com/40'}" class="avatar avatar-sm">`+
                        `<div class="flex-grow-1"><a href="/users/${u._id}" class="text-decoration-none">${u.username}</a></div>`+
                        (currentId && u._id !== currentId ? `<button data-id="${u._id}" class="btn btn-${following?'secondary':'primary'} btn-sm follow-toggle">${following?'Following':'Follow'}</button>`:'')+
                        `</div></div>`; }).join('');
            });

            resultsEl.addEventListener('click', async function(e){
                const btn = e.target.closest('.follow-toggle');
                if(!btn) return;
                const targetId = btn.dataset.id;
                const isFollowing = btn.classList.contains('btn-secondary');
                const action = isFollowing ? 'unfollow' : 'follow';
                btn.disabled = true;
                try{
                    const res = await fetch(`/users/${targetId}/${action}`, {method:'POST'});
                    if(!res.ok) throw new Error();
                    if(isFollowing){
                        btn.classList.remove('btn-secondary');
                        btn.classList.add('btn-primary');
                        btn.textContent = 'Follow';
                    }else{
                        btn.classList.remove('btn-primary');
                        btn.classList.add('btn-secondary');
                        btn.textContent = 'Following';
                    }
                }catch(err){
                    alert('Action failed');
                }finally{
                    btn.disabled = false;
                }
            });
        }

        // Position team logos along the gold chain
        const wrapper = document.querySelector('.profile-avatar-wrapper');
        if(wrapper){
            const logos = wrapper.querySelectorAll('.chain-logo');
            if(logos.length){
                const radius = wrapper.offsetWidth * 0.6;
                const centerX = wrapper.offsetWidth / 2;
                const centerY = wrapper.offsetHeight / 2;
                const angleStep = Math.PI / (logos.length + 1);
                logos.forEach((logo, idx) => {
                    const angle = Math.PI - angleStep * (idx + 1);
                    const x = centerX + radius * Math.cos(angle) - logo.offsetWidth / 2;
                    const y = centerY + radius * Math.sin(angle) - logo.offsetHeight / 2;
                    logo.style.left = x + 'px';
                    logo.style.top = y + 'px';
                });
            }
        }
    </script>
</body>
</html>
