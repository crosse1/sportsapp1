<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Profile</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/custom.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs@1.5.13/dist/cropper.min.css">
</head>
<body class="d-flex flex-column min-vh-100">
    <%- include('partials/header') %>

    <div class="container my-5">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <form action="/profile/edit" method="post" enctype="multipart/form-data">
                    <div class="mb-3 text-center">
                        <% const previewImg = '/users/' + user._id + '/profile-image'; %>
                        <img id="profilePreview" src="<%= previewImg %>" class="avatar avatar-md profile-photo-preview" alt="Profile Photo">
                        <input type="file" name="profileImage" id="profileImageInput" accept=".jpg" class="form-control mt-2">
                        <div class="text-danger" id="uploadError"></div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Username</label>
                        <input type="text" name="username" value="<%= user.username %>" class="form-control" maxlength="20" pattern="^[a-zA-Z0-9_]+$" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input type="email" name="email" value="<%= user.email %>" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Phone Number</label>
                        <input type="text" name="phoneNumber" value="<%= user.phoneNumber %>" class="form-control">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Favorite Teams</label>
                        <select name="favoriteTeams" class="form-control favoriteTeams-select gradient-input" multiple required>
                            <% teams.forEach(t => { %>
                                <option value="<%= t._id %>" data-logo="<%= t.logos && t.logos[0] ? t.logos[0] : '' %>" <%= user.favoriteTeams.some(ft => String(ft._id) === String(t._id)) ? 'selected' : '' %>><%= t.school %> <%= t.mascot %></option>
                            <% }); %>
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary w-100">Save</button>
                </form>
            </div>
        </div>
    </div>

    <div class="modal fade" id="cropModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Adjust Photo</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body text-center">
                    <img id="cropImage" style="max-width:100%;" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" id="cropSaveBtn" class="btn btn-primary">Save</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/cropperjs@1.5.13/dist/cropper.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script>
        function formatTeam(option) {
            if (!option.id) return option.text;
            var logo = $(option.element).data('logo');
            if (logo) {
                return $('<span><img src="'+logo+'" style="width:20px;height:20px;margin-right:5px;">'+option.text+'</span>');
            }
            return option.text;
        }
        $(function(){
            $('.favoriteTeams-select').select2({
                placeholder:'Favorite Teams',
                width: '100%',
                templateResult: formatTeam,
                templateSelection: formatTeam
            });
        });
        const imageInput = document.getElementById('profileImageInput');
        const cropImg = document.getElementById('cropImage');
        const preview = document.getElementById('profilePreview');
        const errorMsg = document.getElementById('uploadError');
        const cropModalEl = document.getElementById('cropModal');
        const cropModal = new bootstrap.Modal(cropModalEl);
        let cropper;

        imageInput.addEventListener('change', function(){
            const file = this.files[0];
            errorMsg.textContent = '';
            if(!file) return;
            if(!/^image\/jpeg/.test(file.type)){
                errorMsg.textContent = 'Invalid file type';
                this.value = '';
                return;
            }
            if(file.size > 5 * 1024 * 1024){
                errorMsg.textContent = 'File must be less than 5MB';
                this.value = '';
                return;
            }
            preview.src = URL.createObjectURL(file);
            const reader = new FileReader();
            reader.onload = function(e){
                cropImg.src = e.target.result;
                cropModal.show();
                if(cropper) cropper.destroy();
                cropper = new Cropper(cropImg, {
                    viewMode:1,
                    aspectRatio:1,
                    background:false
                });
            };
            reader.readAsDataURL(file);
        });

        document.getElementById('cropSaveBtn').addEventListener('click', function(){
    if(!cropper) return;

    cropper.getCroppedCanvas({width:300, height:300}).toBlob(function(blob){
        preview.src = URL.createObjectURL(blob);

        const file = new File([blob], 'profile.jpg', {type:'image/jpeg'});
        const dt = new DataTransfer();
        dt.items.add(file);
        imageInput.files = dt.files;
        cropModal.hide();
    }, 'image/jpeg');
});

    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
