<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Select Favorite Teams</title>

  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"/>
  <link rel="stylesheet" href="/css/custom.css"/>

  <style>
    :root {
      --container-max: 768px;
      --cta-h: 72px;         /* fixed bar height */
      --cta-pad: 12px 16px;  /* padding inside bar */
    }

    .gradient-text {
      background: linear-gradient(to right, #7e22ce, #14b8a6);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      color: transparent;
      font-weight: bold;
    }

    .team-card {
      border: 1px solid #ccc;
      border-radius: 0.5rem;
      cursor: pointer;
      padding: 1rem;
      transition: border-color 0.2s, box-shadow 0.2s;
      background: #fff;
    }
    .team-card.selected {
      border-color: #16a34a;
      box-shadow: 0 0 0 3px rgba(22, 163, 74, .15);
    }

    .modal-header {
      padding-left: 1rem;
      padding-top: 1rem;
    }
    .modal-title {
      margin: 0;
      line-height: 1.1;
    }

    #teamSearch {
      background: #f0f0f0;
      font-weight: bold;
    }

    /* Keep a consistent grid height; JS sets the min via CSS var */
    #teamsGrid {
      min-height: var(--grid-min, 480px);
    }

    /* Space at bottom so content doesn't get hidden behind the fixed CTA bar */
    .modal-body {
      padding-bottom: calc(var(--cta-h) + 16px);
    }

    /* Fixed bottom gray bar aligned to container */
    .fixed-cta {
      position: fixed;
      left: 50%;
      bottom: 0;
      transform: translateX(-50%);
      width: calc(100% - 2rem);         /* gutter on tiny screens */
      max-width: var(--container-max);  /* match your modal-content max width */
      background: #f5f5f5;
      border-top: 1px solid rgba(0,0,0,0.08);
      padding: var(--cta-pad);
      z-index: 1040; /* above content, below modals if any */
      box-shadow: 0 -6px 18px rgba(0,0,0,0.06);
    }

    .fixed-cta .inner {
      display: flex;
      justify-content: center;
      align-items: center;
      gap: .75rem;
    }

    /* Make the CTA button comfortably large */
    #confirmTeams.btn {
      min-width: 180px;
      padding: .7rem 1.25rem;
      font-weight: 600;
    }
  </style>
</head>
<body class="bg-light">
  <div class="d-flex justify-content-center align-items-center min-vh-100">
    <div class="modal-content bg-white w-100" style="max-width: var(--container-max);">
      <div class="modal-header align-items-center">
        <h1 class="modal-title gradient-text">Select Favorite Teams</h1>
      </div>

      <div class="modal-body">
        <div class="d-flex align-items-center mb-3">
          <small class="text-black">
            Users must select at least one favorite team. If you have no strong opinions, select the team you go to the most games of.
          </small>
        </div>

        <input type="text" id="teamSearch" class="form-control mb-3" placeholder="Search schools..."/>

        <div id="teamsGrid" class="row row-cols-2 row-cols-md-3 g-3">
          <% teams.forEach(t => { %>
            <div class="col">
              <div
                class="team-card text-center"
                data-id="<%= t._id %>"
                data-name="<%= (t.school || '').toLowerCase() %>"
              >
                <img
                  src="<%= t.logos && t.logos[0] ? t.logos[0] : '' %>"
                  class="img-fluid mb-2"
                  style="max-height:80px"
                  alt="<%= t.school %>"
                />
                <div class="fw-bold text-black"><%= t.school %></div>
              </div>
            </div>
          <% }) %>
        </div>
      </div>
      <!-- removed modal-footer; CTA is fixed below -->
    </div>
  </div>

  <!-- Fixed bottom CTA bar -->
  <div class="fixed-cta">
    <div class="inner">
      <button id="confirmTeams" class="btn btn-secondary" disabled>Confirm</button>
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script>
    function setGridMinHeight() {
      const grid = document.getElementById('teamsGrid');
      if (!grid) return;

      const sampleCard = grid.querySelector('.team-card');
      const cardH = sampleCard ? Math.ceil(sampleCard.getBoundingClientRect().height) : 120;

      const cs = getComputedStyle(grid);
      const gutterY = parseFloat(cs.getPropertyValue('--bs-gutter-y')) || 16;

      const TARGET_ROWS = 5;
      const minHeight = (cardH + gutterY) * TARGET_ROWS;
      grid.style.setProperty('--grid-min', `${minHeight}px`);
    }

    const selected = new Set();

    function updateButton(){
      const has = selected.size > 0;
      const btn = $('#confirmTeams');
      btn.prop('disabled', !has);
      btn.toggleClass('btn-primary', has).toggleClass('btn-secondary', !has);
    }

    function debounce(fn, ms) {
      let t; return function() { clearTimeout(t); t = setTimeout(() => fn.apply(this, arguments), ms); };
    }

    $(function(){
      setGridMinHeight();
      window.addEventListener('resize', debounce(setGridMinHeight, 150), { passive: true });

      $(document).on('click', '.team-card', function(){
        const id = $(this).data('id');
        if (selected.has(id)) {
          selected.delete(id);
          $(this).removeClass('selected');
        } else {
          selected.add(id);
          $(this).addClass('selected');
        }
        updateButton();
      });

      $('#teamSearch').on('input', function(){
        const v = $(this).val().toLowerCase();
        $('.team-card').each(function(){
          const name = $(this).data('name') || '';
          $(this).closest('.col').toggle(name.includes(v));
        });
      });

      $('#confirmTeams').on('click', function(){
        if (selected.size === 0) return;
        fetch('/select-teams', {
          method:'POST',
          headers:{ 'Content-Type':'application/json' },
          body: JSON.stringify({ favoriteTeams: Array.from(selected) })
        }).then(r => {
          if (r.ok) window.location.href = '/games';
        }).catch(() => {});
      });
    });
  </script>
</body>
</html>
