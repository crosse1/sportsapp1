<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profile - Badges</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/custom.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <style>        .badge-card {
            border: 2px solid transparent;
            background-image: linear-gradient(white, white), linear-gradient(to right, #14b8a6, #7e22ce);
            background-origin: border-box;
            background-clip: padding-box, border-box;
            border-radius: 0.5rem;
        }
    
        .badge-icon-2025 {
            position: relative;
            width: 7rem;
            height: 7rem;
            border-radius: 50%;
            margin: 0 auto 0.5rem auto;
            display: flex;
            align-items: center;
            justify-content: center;
            background: linear-gradient(to bottom, #b3b2b2, #fff);
            overflow: hidden;
        }
    
        .badge-2025-inner {
            position: relative;
            width: 4.5rem;
            height: 4.5rem;
            border-radius: 50%;
            background: white;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
        }
    
        .badge-2025-inner::before {
            content: '2025';
            font-size: 2.5rem;
            font-weight: 900;
            line-height: 1;
            background-image: var(--logo-url);
            background-size: cover;
            background-position: center;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            color: transparent;
            z-index: 2;
            position: relative;
        }
    
        .row-cols-1, .row-cols-sm-2, .row-cols-lg-3 {
            --bs-gutter-x: 3rem;
        }
        .badge-title {
            font-size: 1.1rem;
            font-weight: 600;
            text-align: left;
        }
        .badge-description {
            font-size: 0.7rem;
            font-weight: 300;
            text-align: left;
        }
        .badge-link {
            text-align: right;
        }
        .diamond-text {
            font-weight: bold;
            color: #89d5e0;
            text-align: center;
            font-size: 1.1rem;
        }
    
        .more-btn {

    background: none;
    border: none;
    padding: 0;
    font-size: 2rem;
    font-weight: bold;
    text-align: center;
    display: inline-flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: opacity 0.3s ease;
}

.more-btn span {
    background: linear-gradient(to right, #14b8a6, #7e22ce);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    display: block;
    line-height: 1.2;
}

.more-btn:hover {
    opacity: 0.75;
}


        .badge-page-title {
            font-size: 2.5rem;
            font-weight: 700;
            background: linear-gradient(to right, #7e22ce, #14b8a6);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            color: transparent;
        }


        .filters-row .select2-container {
            width: 50% !important;
        }


        .filters-row .select2-container--default .select2-selection--single,
        .filters-row .select2-container--default .select2-dropdown,
        .glass-select2.select2-dropdown {
            position: relative;
            background: linear-gradient(to right, #14b8a6, #7e22ce) !important;
            border: 1px solid rgba(255, 255, 255, 0.2) !important;
            border-radius: 0.5rem !important;
            overflow: hidden;
            
        }


        .filters-row .select2-container--default .select2-selection--single::before,
        .filters-row .select2-container--default .select2-dropdown::before,
        .glass-select2.select2-dropdown::before {

            content: '';
            position: absolute;
            inset: 0;
            background: rgba(255, 255, 255, 0.15);

            
            border-radius: inherit;
            pointer-events: none;
        }


        .filters-row .select2-container--default .select2-selection--single {
            height: 3.15rem !important;
            display: flex;
            align-items: center;
        }

        .filters-row .select2-container--default .select2-selection__rendered {
            position: relative;
            z-index: 1;
            color: #fff !important;
            font-weight: bold;
        }


        .filters-row .select2-container--default .select2-selection__placeholder {
            color: #fff !important;
        }


        .filters-row .select2-container--default .select2-selection__clear,
        .filters-row .select2-container--default .select2-selection__clear:hover,
        .filters-row .select2-container--default .select2-selection__clear:focus {
            position: relative;
            z-index: 1;
            display: inline-block;
            background: linear-gradient(to right, #14b8a6, #7e22ce);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            cursor: pointer;
        }

        .filters-row .select2-container--default .select2-dropdown,
        .glass-select2.select2-dropdown {
            color: #fff;
        }

        .filters-row .select2-container--default .select2-results__option,
        .glass-select2.select2-dropdown .select2-results__option {
            color: #fff;
        }

        .filters-row .select2-container--default .select2-results__option--highlighted,
        .glass-select2.select2-dropdown .select2-results__option--highlighted {
            background: rgba(255, 255, 255, 0.3) !important;
            color: #fff !important;
        }


    </style>
    
    
</head>
<body class="d-flex flex-column min-vh-100">
<%- include('partials/header') %>
<%- include('partials/profileHeader', { user, isCurrentUser, isFollowing, canMessage, viewer, activeTab: 'badges' }) %>
<div class="container my-4 flex-grow-1">
    <div class="d-flex flex-column flex-lg-row align-items-start align-items-lg-center justify-content-between gap-3 mb-4">
        <h2 class="badge-page-title text-center text-lg-start mb-0"><%= user.username %>'s Badges</h2>
        <div class="filters-row d-flex flex-column flex-sm-row gap-2 ms-lg-auto">
            <select id="conferenceFilter" class="form-select">
                <option></option>
                <% conferences.forEach(function(conf){ %>
                    <option value="<%= conf.confId %>"><%= conf.confName %></option>
                <% }); %>
            </select>
            <select id="teamFilter" class="form-select">
                <option></option>
                <% teamsData.forEach(function(team){ %>
                    <option value="<%= team._id %>"><%= team.school %></option>
                <% }); %>
            </select>
            <button id="clearFilters" class="btn btn-outline-light btn-sm">Clear Filters</button>
        </div>
    </div>

    <% if (sortedBadges && sortedBadges.length) { %>

    <div class="row row-cols-1 row-cols-sm-2 row-cols-lg-3 g-4" id="badgeGrid">
        <% sortedBadges.forEach(function(badge, index) {
            const teams = (badge.teamConstraints || [])[0];
            const team = teamsData.find(t => String(t._id) === String(teams));
            const progress = userProgress[badge.badgeID] || 0;
            const percent = Math.round((progress / badge.reqGames) * 100);
        %>
        <div class="col badge-col" data-conferences="<%= (badge.conferenceConstraints || []).map(String).join(',') %>" data-teams="<%= (badge.teamConstraints || []).map(String).join(',') %>" style="<%= index >= 9 ? 'display: none;' : '' %>">
            <div class="card h-100 badge-card p-3 d-flex flex-column">
  <%- include('partials/badgeIcon', { badge, team, percent }) %>

                 <div class="diamond-text mt-2">ðŸ’Ž <%= badge.pointValue %></div>

  <div class="card-body d-flex flex-column p-0 mt-2">
                    <h5 class="card-title badge-title">
                        <%= badge.badgeName %> (<%= progress %>/<%= badge.reqGames %>)
                    </h5>
                    <p class="card-text badge-description flex-grow-1"><%= badge.description %></p>
                    <div class="badge-link mt-auto">
                        <a href="/games?teamId=<%= teams %>" class="text-decoration-none">See Upcoming Games â†’</a>
                    </div>
                </div>
            </div>
        </div>
        <% }) %>
    </div>

    <div class="text-center mt-4">
        <button id="loadMoreBtn" class="more-btn" style="align-items: center;">
            <span>More</span>
            <span style="margin-top: -1rem;">âŒ„</span>
        </button>
    </div>
    <% } else { %>
    <p class="empty-tab-message text-center">No badges yet</p>
    <% } %>
</div>


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="/js/profileModals.js"></script>
    <script src="/js/addGameModal.js"></script>
    <script>
        let shown = 9;
        const batch = 12; // Show 4 rows (3 per row)
        const btn = document.getElementById('loadMoreBtn');

        function resetGrid() {
            const cols = document.querySelectorAll('.badge-col');
            cols.forEach((col, index) => {
                col.style.display = index < shown ? 'block' : 'none';
            });
            if (btn) {
                if (cols.length > shown) {
                    btn.style.display = 'block';
                } else {
                    btn.style.display = 'none';
                }
            }

        }

        if (btn) {
            btn.addEventListener('click', () => {
                const hidden = document.querySelectorAll('.badge-col[style*="display: none"]');
                for (let i = 0; i < batch && i < hidden.length; i++) {
                    hidden[i].style.display = 'block';
                }
                if (document.querySelectorAll('.badge-col[style*="display: none"]').length === 0) {
                    btn.style.display = 'none';
                }
            });
        }

        const conferenceFilter = $('#conferenceFilter');
        const teamFilter = $('#teamFilter');

        conferenceFilter.select2({
            placeholder: 'Conference',
            allowClear: true,
            width: 'resolve',
            containerCssClass: 'glass-select2',
            dropdownCssClass: 'glass-select2'
        });

        teamFilter.select2({
            placeholder: 'Team',
            allowClear: true,
            width: 'resolve',
            containerCssClass: 'glass-select2',
            dropdownCssClass: 'glass-select2'
        });

        const badgeCols = document.querySelectorAll('.badge-col');

        function applyFilters() {
            const confVal = conferenceFilter.val();
            const teamVal = teamFilter.val();
            const active = confVal || teamVal;
            badgeCols.forEach(col => {
                const confs = (col.dataset.conferences || '').split(',').filter(Boolean);
                const teams = (col.dataset.teams || '').split(',').filter(Boolean);
                const confMatch = !confVal || confs.includes(confVal);
                const teamMatch = !teamVal || teams.includes(teamVal);
                col.style.display = confMatch && teamMatch ? '' : 'none';
            });
            if (active) {
                if (btn) btn.style.display = 'none';
            } else {
                resetGrid();
            }
        }


        conferenceFilter.on('change', applyFilters);
        teamFilter.on('change', applyFilters);

        $('#clearFilters').on('click', function () {
            conferenceFilter.val(null).trigger('change');
            teamFilter.val(null).trigger('change');
            applyFilters();
        });

        resetGrid();
    </script>
</body>
</html>
